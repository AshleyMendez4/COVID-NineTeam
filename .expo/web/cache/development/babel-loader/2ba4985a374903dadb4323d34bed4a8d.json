{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jovan Zuniga\\\\Desktop\\\\COVID-NineTeam\\\\components\\\\auth\\\\Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport fire from \"../fire\";\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.validatePassword = function () {\n      var _this$state = _this.state,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (password != confirmPassword) {\n        alert(\"Your passwords do not match!\");\n      } else {\n        _this.setState({\n          currentView: 2\n        });\n      }\n    };\n\n    _this.validateNumbers = function () {\n      var _this$state2 = _this.state,\n          name = _this$state2.name,\n          sex = _this$state2.sex,\n          age = _this$state2.age,\n          feet = _this$state2.feet,\n          inches = _this$state2.inches,\n          weight = _this$state2.weight;\n      var errorMsg = 'Invalid fields:';\n      var isError = false;\n\n      if (name == '') {\n        errorMsg += '\\nName';\n        isError = true;\n      }\n\n      if (sex == '' || sex == 'Select your sex...') {\n        errorMsg += '\\nSex';\n        isError = true;\n      }\n\n      if (age == '' || isNaN(age) || age < 1 || age > 120) {\n        errorMsg += '\\nAge';\n        isError = true;\n      }\n\n      if (inches == '' || isNaN(inches) || inches < 0 || inches > 11 || feet == '' || isNaN(feet) || feet < 0 || feet > 10) {\n        errorMsg += '\\nHeight';\n        isError = true;\n      }\n\n      if (weight == '' || isNaN(weight) || weight < 0 || weight > 1500) {\n        errorMsg += '\\nWeight';\n        isError = true;\n      }\n\n      if (isError == true) {\n        alert(errorMsg);\n        isError = false;\n      } else {\n        _this.onSignUp();\n      }\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      sex: '',\n      age: '',\n      feet: '',\n      inches: '',\n      weight: '',\n      bmi: '',\n      currentView: 1\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          sex = _this$state3.sex,\n          age = _this$state3.age,\n          feet = _this$state3.feet,\n          inches = _this$state3.inches,\n          weight = _this$state3.weight,\n          bmi = _this$state3.bmi;\n      var total_height = 12 * parseInt(feet) + parseInt(inches);\n      var bmiCalc = parseFloat(parseFloat(weight) / Math.pow(total_height, 2) * 703).toFixed(2);\n      fire.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid).set({\n          name: name,\n          email: email,\n          sex: sex,\n          age: age,\n          feet: feet,\n          inches: inches,\n          weight: weight,\n          bmi: bmiCalc\n        });\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        bmi: bmiCalc\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentView = this.state.currentView;\n\n      if (currentView == 1) {\n        return React.createElement(View, {\n          style: styles.contentCenter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"light-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }), React.createElement(Image, {\n          style: styles.loginImage,\n          source: require(\"../../assets/icon.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.loginPrompt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"email\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"Password\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"visible-password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"Confirm password\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"visible-password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(confirmPassword) {\n            return _this2.setState({\n              confirmPassword: confirmPassword\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }\n        }), React.createElement(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return _this2.validatePassword();\n          },\n          title: \"Next\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        })));\n      } else if (currentView == 2) {\n        return React.createElement(View, {\n          style: styles.contentCenter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.loginImage,\n          source: require(\"../../assets/icon.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.loginPrompt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"name\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          onChangeText: function onChangeText(name) {\n            return _this2.setState({\n              name: name\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }\n        }), React.createElement(RNPickerSelect, {\n          style: {\n            backgroundColor: 'white'\n          },\n          placeholder: {\n            label: 'Select your sex...',\n            value: ''\n          },\n          items: [{\n            label: 'Male',\n            value: 'male'\n          }, {\n            label: 'Female',\n            value: 'female'\n          }],\n          onValueChange: function onValueChange(sex) {\n            return _this2.setState({\n              sex: sex\n            });\n          },\n          returnKeyType: \"done\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"age\",\n          mode: \"outlined\",\n          keyboardType: \"number-pad\",\n          returnKeyType: \"done\",\n          onChangeText: function onChangeText(age) {\n            return _this2.setState({\n              age: age\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"height in feet\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"number-pad\",\n          onChangeText: function onChangeText(feet) {\n            return _this2.setState({\n              feet: feet\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"height in inches\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"number-pad\",\n          onChangeText: function onChangeText(inches) {\n            return _this2.setState({\n              inches: inches\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"weight\",\n          mode: \"outlined\",\n          returnKeyType: \"done\",\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(weight) {\n            return _this2.setState({\n              weight: weight\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }\n        }), React.createElement(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return _this2.validateNumbers();\n          },\n          title: \"Register\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };\nvar styles = {\n  loginPrompt: {\n    marginTop: 30,\n    marginLeft: 24,\n    marginRight: 24,\n    marginBottom: 70\n  },\n  loginImage: {\n    width: 250,\n    height: 250,\n    marginLeft: 20,\n    marginTop: 30,\n    marginBottom: 30\n  },\n  inputLabel: {\n    width: 280,\n    height: 45,\n    borderColor: \"#43519D\",\n    backgroundColor: \"#FFFFFF\"\n  },\n  userLabel: {\n    fontSize: 20,\n    color: \"#414E93\"\n  },\n  contentCenter: {\n    height: '100%',\n    backgroundColor: \"#192879\",\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["C:/Users/Jovan Zuniga/Desktop/COVID-NineTeam/components/auth/Register.js"],"names":["StatusBar","React","Component","RNPickerSelect","fire","Register","props","validatePassword","state","password","confirmPassword","alert","setState","currentView","validateNumbers","name","sex","age","feet","inches","weight","errorMsg","isError","isNaN","onSignUp","email","bmi","bind","total_height","parseInt","bmiCalc","parseFloat","toFixed","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","styles","contentCenter","loginImage","require","loginPrompt","inputLabel","backgroundColor","label","value","marginTop","marginLeft","marginRight","marginBottom","width","height","borderColor","userLabel","fontSize","color","alignItems"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react'\r\nimport { View, Button, TextInput, Image } from 'react-native'\r\nimport RNPickerSelect from 'react-native-picker-select';\r\n\r\nimport fire from '../fire'\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = \r\n        {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            sex: '',\r\n            age: '',\r\n            feet: '',\r\n            inches: '',\r\n            weight: '',\r\n            bmi: '',\r\n            currentView: 1\r\n        }\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n    }\r\n    //TODO: process codes for errors and display to user\r\n    onSignUp() {\r\n\r\n        const { name, email, password, sex, age, feet, inches, weight, bmi } = this.state;\r\n\r\n        var total_height = ((12 * parseInt(feet)) + parseInt(inches));\r\n        var bmiCalc = (parseFloat(( parseFloat(weight) / (total_height**2)) * 703)).toFixed(2);\r\n\r\n        fire.auth().createUserWithEmailAndPassword(email, password)\r\n        .then((result) => {\r\n            fire.firestore().collection(\"users\")\r\n            .doc(fire.auth().currentUser.uid)\r\n            .set({\r\n                name,\r\n                email,\r\n                sex,\r\n                age,\r\n                feet,\r\n                inches,\r\n                weight,\r\n                bmi: bmiCalc\r\n            })\r\n            console.log(result)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n        \r\n        this.setState({ bmi: bmiCalc });\r\n    }\r\n\r\n    validatePassword = () => \r\n    {\r\n        const { password, confirmPassword } = this.state;\r\n\r\n        if (password != confirmPassword)\r\n        {\r\n            alert(\"Your passwords do not match!\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({currentView: 2})\r\n        }\r\n    }\r\n\r\n    validateNumbers = () =>\r\n    {\r\n        const { name, sex, age, feet, inches, weight } = this.state;\r\n        var errorMsg = 'Invalid fields:';\r\n        var isError = false;\r\n\r\n        //Check if name is empty\r\n        if (name == '')\r\n        {\r\n            errorMsg += '\\nName';\r\n            isError = true;\r\n        }\r\n        //Check if sex is empty\r\n        if (sex == '' || sex == 'Select your sex...')\r\n        {\r\n            errorMsg += '\\nSex';\r\n            isError = true;\r\n        }\r\n        //Check if age is valid\r\n        if (age == '' || isNaN(age) || age < 1 || age > 120)\r\n        {\r\n            errorMsg += '\\nAge';\r\n            isError = true;\r\n        }\r\n        //Check if height is valid\r\n        if (inches == '' || isNaN(inches) || inches < 0 || inches > 11 || feet == '' || isNaN(feet) || feet < 0 || feet > 10)\r\n        {\r\n            errorMsg += '\\nHeight';\r\n            isError = true;\r\n        }\r\n        //Check if weight is valid\r\n        if (weight == '' || isNaN(weight) || weight < 0 || weight > 1500)\r\n        {\r\n            errorMsg += '\\nWeight';\r\n            isError = true;\r\n        }\r\n\r\n        //If an error was detected.\r\n        if (isError == true)\r\n        {\r\n            alert(errorMsg);\r\n            isError = false;\r\n        }\r\n        //If everything is valid\r\n        else\r\n        {\r\n            this.onSignUp();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentView} = this.state\r\n\r\n        if (currentView == 1)\r\n        {\r\n            return (\r\n                <View style = {styles.contentCenter}>\r\n                <StatusBar barStyle='light-content' />\r\n                <Image style = {styles.loginImage} source = {require(\"../../assets/icon.png\")}/>\r\n                    <View style = {styles.loginPrompt}>      \r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"email\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'email-address'\r\n                            onChangeText={email => this.setState({ email })}\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"Password\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'visible-password'\r\n                            secureTextEntry={ true }\r\n                            onChangeText={password => this.setState({ password })}\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"Confirm password\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'visible-password'\r\n                            secureTextEntry={ true }\r\n                            onChangeText={confirmPassword => this.setState({ confirmPassword })}\r\n                        />\r\n                    \r\n                        <Button\r\n                            mode = \"contained\"\r\n                            onPress = {() => this.validatePassword()}\r\n                            title = \"Next\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            )\r\n        }\r\n        else if (currentView == 2)\r\n        {\r\n            return (\r\n                <View style = {styles.contentCenter}>\r\n                <Image style = {styles.loginImage} source = {require(\"../../assets/icon.png\")}/>\r\n                    <View style = {styles.loginPrompt}>      \r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"name\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            onChangeText={name => this.setState({ name })}\r\n                        />\r\n                        <RNPickerSelect\r\n                            style = {{backgroundColor: 'white'}}\r\n                            placeholder = {{label:'Select your sex...', value: ''}}\r\n                            items = {[{label: 'Male', value: 'male'}, {label: 'Female', value: 'female'}]}\r\n                            onValueChange={sex => this.setState({ sex })}\r\n                            returnKeyType = 'done'\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"age\"\r\n                            mode = \"outlined\"\r\n                            keyboardType = 'number-pad'\r\n                            returnKeyType = 'done'\r\n                            onChangeText={age => this.setState({ age })}\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"height in feet\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'number-pad'\r\n                            onChangeText={feet => this.setState({ feet })}\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"height in inches\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'number-pad'\r\n                            onChangeText={inches => this.setState({ inches })}\r\n                        />\r\n                        <TextInput\r\n                            style = {styles.inputLabel}\r\n                            placeholder=\"weight\"\r\n                            mode = \"outlined\"\r\n                            returnKeyType = 'done'\r\n                            keyboardType = 'numeric'\r\n                            onChangeText={weight => this.setState({ weight })}\r\n                        />\r\n\r\n                        <Button\r\n                            mode = \"contained\"\r\n                            onPress={() => this.validateNumbers()}\r\n                            title=\"Register\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = \r\n{\r\n    loginPrompt:\r\n    {\r\n        marginTop: 30,\r\n        marginLeft: 24,\r\n        marginRight: 24,\r\n        marginBottom: 70\r\n    },\r\n    loginImage:\r\n    {\r\n        width: 250,\r\n        height: 250,\r\n        marginLeft: 20,\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n    },\r\n    inputLabel:\r\n    {\r\n        width: 280,\r\n        height: 45,\r\n        borderColor: \"#43519D\",\r\n        backgroundColor: \"#FFFFFF\"\r\n    },\r\n    userLabel:\r\n    {\r\n        fontSize: 20,\r\n        color: \"#414E93\"\r\n    },\r\n    contentCenter:\r\n    {\r\n        height: '100%',\r\n        backgroundColor: \"#192879\",\r\n        alignItems: 'center'\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}