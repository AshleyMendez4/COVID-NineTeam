{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jovan Zuniga\\\\Desktop\\\\COVID-NineTeam\\\\components\\\\main\\\\Userlist.js\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport fire from \"../fire\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport colors from \"../../assets/colors/colors\";\nexport default function Userlist() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userList = _useState2[0],\n      setUserList = _useState2[1];\n\n  var usersDB = fire.firestore().collection('users');\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userDataIsRetrieved = _useState4[0],\n      setUserDataIsRetrieved = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      popupOpen = _useState6[0],\n      setPopupOpen = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popupItem = _useState8[0],\n      setPopupItem = _useState8[1];\n\n  var getUsers = function getUsers() {\n    usersDB.get().then(function (querySnapshot) {\n      var userData = querySnapshot.docs.map(function (doc) {\n        return doc.data();\n      });\n      setUserList(userData);\n    }).catch(function (error) {\n      console.log('Error getting documents: ', error);\n    });\n    setUserDataIsRetrieved(true);\n  };\n\n  var togglePopup = function togglePopup(item) {\n    setPopupOpen(!popupOpen);\n\n    if (item != null) {\n      setPopupItem(item);\n    }\n  };\n\n  if (userDataIsRetrieved == false) {\n    getUsers();\n  }\n\n  return React.createElement(LinearGradient, {\n    colors: [colors.lightBlue, colors.darkBlue],\n    style: styles.outerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.contentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.pageHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"List of Users\"), React.createElement(View, {\n    style: styles.innerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, userList != null && React.createElement(FlatList, {\n    data: userList,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.profileData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return togglePopup(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.profilePicId\n        },\n        style: styles.profilePicture,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), popupItem != null && React.createElement(Modal, {\n    animationType: \"none\",\n    visible: popupOpen,\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.modalBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return togglePopup(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.xbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"X\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, popupItem.first_name), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, popupItem.sex), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, popupItem.feet, \"' \", popupItem.inches, \"\\\"\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, popupItem.weight, \"lbs\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, popupItem.bmi)))))));\n}\nvar styles = {\n  name: {\n    fontSize: 23,\n    fontFamily: 'NunitoSans-Bold',\n    marginLeft: 10\n  },\n  purposeText: {\n    fontFamily: 'NunitoSans-Regular',\n    fontSize: 18,\n    marginLeft: 10\n  },\n  profilePicture: {\n    marginLeft: 10,\n    marginTop: 10,\n    width: 180,\n    height: 180,\n    borderRadius: 100,\n    elevation: 12\n  },\n  outerScreen: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: '100%'\n  },\n  pageHeader: {\n    fontSize: 30,\n    fontFamily: 'NunitoSans-Bold',\n    color: '#000000'\n  },\n  contentCenter: {\n    height: '100%',\n    alignItems: 'center'\n  },\n  innerScreen: {\n    height: '80%',\n    width: '80%',\n    backgroundColor: \"#FFFFFF\"\n  },\n  profileData: {\n    borderWidth: 0.25,\n    borderColor: \"#D3D3D3\",\n    alignItems: 'center'\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  modalBody: {\n    backgroundColor: '#F8F8FF',\n    borderRadius: 10,\n    width: 500,\n    height: 300,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 4\n  },\n  xbutton: {\n    marginTop: 10,\n    marginLeft: 290,\n    fontSize: 30,\n    opacity: 0.3\n  }\n};","map":{"version":3,"sources":["C:/Users/Jovan Zuniga/Desktop/COVID-NineTeam/components/main/Userlist.js"],"names":["React","useState","StatusBar","fire","SafeAreaView","LinearGradient","colors","Userlist","userList","setUserList","usersDB","firestore","collection","userDataIsRetrieved","setUserDataIsRetrieved","popupOpen","setPopupOpen","popupItem","setPopupItem","getUsers","get","then","querySnapshot","userData","docs","map","doc","data","catch","error","console","log","togglePopup","item","lightBlue","darkBlue","styles","outerScreen","contentCenter","pageHeader","innerScreen","profileData","uri","profilePicId","profilePicture","center","modalBody","xbutton","first_name","sex","feet","inches","weight","bmi","name","fontSize","fontFamily","marginLeft","purposeText","marginTop","width","height","borderRadius","elevation","position","left","right","top","color","alignItems","backgroundColor","borderWidth","borderColor","flex","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport fire from '../fire'\r\nimport { Text, View, FlatList, Image, Modal, TouchableOpacity } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport colors from '../../assets/colors/colors';\r\n\r\nexport default function Userlist()\r\n{    \r\n    const [userList, setUserList] = useState(null);\r\n    const usersDB = fire.firestore().collection('users');\r\n    const [userDataIsRetrieved, setUserDataIsRetrieved] = useState(false);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n    const [popupItem, setPopupItem] = useState(null);\r\n\r\n    //Get user information from firestore\r\n    const getUsers = () =>\r\n    {\r\n        usersDB.get().then(function(querySnapshot) \r\n        {\r\n            let userData = querySnapshot.docs.map(doc => doc.data())\r\n            setUserList(userData)\r\n        }).catch(function(error) {console.log('Error getting documents: ', error)})\r\n\r\n        setUserDataIsRetrieved(true);\r\n    }\r\n\r\n    const togglePopup = (item) =>\r\n    {\r\n        setPopupOpen(!popupOpen)\r\n\r\n        if (item != null)\r\n        {\r\n            setPopupItem(item);\r\n        }\r\n    }\r\n\r\n    if (userDataIsRetrieved == false)\r\n    {\r\n        getUsers();\r\n    }\r\n\r\n    return (\r\n        <LinearGradient colors={[colors.lightBlue, colors.darkBlue]} style={styles.outerScreen}>\r\n        <SafeAreaView style = {styles.contentCenter}>\r\n            <StatusBar barStyle='light-content' />\r\n            <Text style = {styles.pageHeader}>List of Users</Text>\r\n            <View style = {styles.innerScreen}>\r\n                {userList != null &&\r\n                    <FlatList\r\n                    data={userList}\r\n                    renderItem={({item}) => \r\n                        <View style = {styles.profileData}>\r\n                            <TouchableOpacity onPress = {() => togglePopup(item)}>\r\n                                <Image source={{uri: item.profilePicId}} style={styles.profilePicture}/>\r\n                                \r\n                            </TouchableOpacity>\r\n                        </View>}\r\n                    />\r\n                }\r\n\r\n                {popupItem != null &&\r\n                <Modal animationType = 'none' visible = {popupOpen} transparent = {true}>\r\n                    <View style = {styles.center}>\r\n                        <View style = {styles.modalBody}>\r\n                            <TouchableOpacity onPress = {() => togglePopup(null)}>\r\n                                <Text style = {styles.xbutton}>X</Text>\r\n                            </TouchableOpacity>\r\n                            <Text>{popupItem.first_name}</Text>\r\n                            <Text>{popupItem.sex}</Text>\r\n                            <Text>{popupItem.feet}' {popupItem.inches}\"</Text>\r\n                            <Text>{popupItem.weight}lbs</Text>\r\n                            <Text>{popupItem.bmi}</Text>\r\n                        </View>\r\n                    </View>\r\n                </Modal>}\r\n            </View>\r\n        </SafeAreaView>\r\n        </LinearGradient>\r\n    );\r\n}   \r\n\r\nconst styles =\r\n{\r\n    name:\r\n    {\r\n        fontSize: 23,\r\n        fontFamily: 'NunitoSans-Bold',\r\n        marginLeft: 10\r\n    },\r\n    purposeText:\r\n    {\r\n        fontFamily: 'NunitoSans-Regular',\r\n        fontSize: 18,\r\n        marginLeft: 10\r\n    },\r\n    profilePicture:\r\n    {\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 100,\r\n        elevation: 12\r\n    },\r\n    outerScreen: \r\n    {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        height: '100%'\r\n    },\r\n    pageHeader:\r\n    {\r\n        fontSize: 30,\r\n        fontFamily: 'NunitoSans-Bold',\r\n        color: '#000000'\r\n    },\r\n    contentCenter:\r\n    {\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    innerScreen:\r\n    {\r\n        height: '80%',\r\n        width: '80%',\r\n        backgroundColor: \"#FFFFFF\"\r\n    },\r\n    profileData:\r\n    {\r\n        borderWidth: 0.25,\r\n        borderColor: \"#D3D3D3\",\r\n        alignItems: 'center'\r\n    },\r\n    center: \r\n    {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    modalBody: \r\n    {\r\n        backgroundColor: '#F8F8FF',\r\n        borderRadius: 10,\r\n        width: 500,\r\n        height: 300,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: \r\n        {\r\n          width: 2,\r\n          height: 3\r\n        },\r\n        shadowOpacity: 0.5,\r\n        shadowRadius: 4\r\n    },\r\n    xbutton:\r\n    {\r\n        marginTop: 10,\r\n        marginLeft: 290,\r\n        fontSize: 30,\r\n        opacity: 0.3\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}