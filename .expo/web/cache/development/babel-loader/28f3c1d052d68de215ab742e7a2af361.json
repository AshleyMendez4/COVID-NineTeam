{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jovan/Desktop/COVID-NineTeam/components/auth/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport fire from \"../fire\";\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.validatePassword = function () {\n      var _this$state = _this.state,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (password != confirmPassword) {\n        alert(\"Your passwords do not match!\");\n      } else {\n        _this.setState({\n          currentView: 2\n        });\n      }\n    };\n\n    _this.validateNumbers = function () {\n      var _this$state2 = _this.state,\n          name = _this$state2.name,\n          sex = _this$state2.sex,\n          age = _this$state2.age,\n          feet = _this$state2.feet,\n          inches = _this$state2.inches,\n          weight = _this$state2.weight;\n\n      if (name == '' || sex == '' || age == '' || feet == '' || inches == '' || weight == '') {\n        alert(\"Fill out all fields.\");\n      } else if (isNaN(age) || isNaN(feet) || isNaN(inches) || isNaN(weight)) {\n        alert(\"Some of your responses are invalid.\");\n      } else if (age < 1 || age > 120) {\n        alert(\"Enter a valid age.\");\n      } else if (inches < 0 || inches > 11 || feet < 0 || feet > 10) {\n        alert(\"Enter a valid height.\");\n      } else if (weight < 0 || weight > 1500) {\n        alert(\"Enter a valid weight.\");\n      } else {\n        _this.onSignUp();\n      }\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      sex: '',\n      age: '',\n      feet: '',\n      inches: '',\n      weight: '',\n      currentView: 1\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          sex = _this$state3.sex,\n          age = _this$state3.age,\n          feet = _this$state3.feet,\n          inches = _this$state3.inches,\n          weight = _this$state3.weight;\n      fire.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid).set({\n          name: name,\n          email: email,\n          sex: sex,\n          age: age,\n          feet: feet,\n          inches: inches,\n          weight: weight\n        });\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentView = this.state.currentView;\n\n      if (currentView == 1) {\n        return React.createElement(View, {\n          style: styles.contentCenter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, React.createElement(StatusBar, {\n          backgroundColor: \"blue\",\n          barStyle: \"light-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }), React.createElement(Image, {\n          style: styles.loginImage,\n          source: require(\"../../assets/icon.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.loginPrompt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"email\",\n          mode: \"outlined\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"Password\",\n          mode: \"outlined\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"Confirm password\",\n          mode: \"outlined\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(confirmPassword) {\n            return _this2.setState({\n              confirmPassword: confirmPassword\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }), React.createElement(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return _this2.validatePassword();\n          },\n          title: \"Next\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        })));\n      } else if (currentView == 2) {\n        return React.createElement(View, {\n          style: styles.contentCenter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.loginImage,\n          source: require(\"../../assets/icon.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.loginPrompt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"name\",\n          mode: \"outlined\",\n          onChangeText: function onChangeText(name) {\n            return _this2.setState({\n              name: name\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }), React.createElement(RNPickerSelect, {\n          placeholder: {\n            label: 'Select your sex...',\n            value: ''\n          },\n          items: [{\n            label: 'Male',\n            value: 'male'\n          }, {\n            label: 'Female',\n            value: 'female'\n          }],\n          onValueChange: function onValueChange(sex) {\n            return _this2.setState({\n              sex: sex\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"age\",\n          mode: \"outlined\",\n          onChangeText: function onChangeText(age) {\n            return _this2.setState({\n              age: age\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"height in feet\",\n          mode: \"outlined\",\n          onChangeText: function onChangeText(feet) {\n            return _this2.setState({\n              feet: feet\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }\n        }), React.createElement(RNPickerSelect, {\n          placeholder: {\n            label: 'Height in inches',\n            value: '0'\n          },\n          items: [{\n            label: '1',\n            value: '1'\n          }, {\n            label: 'Female',\n            value: 'female'\n          }],\n          onValueChange: function onValueChange(sex) {\n            return _this2.setState({\n              sex: sex\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputLabel,\n          placeholder: \"weight\",\n          mode: \"outlined\",\n          onChangeText: function onChangeText(weight) {\n            return _this2.setState({\n              weight: weight\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }), React.createElement(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return _this2.validateNumbers();\n          },\n          title: \"Register\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };\nvar styles = {\n  loginPrompt: {\n    marginTop: 30,\n    marginLeft: 24,\n    marginRight: 24,\n    marginBottom: 70\n  },\n  loginImage: {\n    width: 250,\n    height: 250,\n    marginLeft: 20,\n    marginTop: 30,\n    marginBottom: 30\n  },\n  inputLabel: {\n    width: 280,\n    height: 45,\n    borderColor: \"#43519D\",\n    backgroundColor: \"#FFFFFF\"\n  },\n  userLabel: {\n    fontSize: 20,\n    color: \"#414E93\"\n  },\n  contentCenter: {\n    height: '100%',\n    backgroundColor: \"#192879\",\n    alignItems: 'center'\n  }\n};","map":{"version":3,"sources":["/Users/jovan/Desktop/COVID-NineTeam/components/auth/Register.js"],"names":["StatusBar","React","Component","RNPickerSelect","fire","Register","props","validatePassword","state","password","confirmPassword","alert","setState","currentView","validateNumbers","name","sex","age","feet","inches","weight","isNaN","onSignUp","email","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","styles","contentCenter","loginImage","require","loginPrompt","inputLabel","label","value","marginTop","marginLeft","marginRight","marginBottom","width","height","borderColor","backgroundColor","userLabel","fontSize","color","alignItems"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAOC,IAAP;;IAEqBC,Q;;;;;AAEjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAyCnBC,gBAzCmB,GAyCA,YACnB;AAAA,wBAC0C,MAAKC,KAD/C;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,eADtB,eACsBA,eADtB;;AAGI,UAAID,QAAQ,IAAIC,eAAhB,EACA;AACIC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAHD,MAKA;AACI,cAAKC,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAd;AACH;AACJ,KArDkB;;AAAA,UAuDnBC,eAvDmB,GAuDD,YAClB;AAAA,yBACqD,MAAKN,KAD1D;AAAA,UACYO,IADZ,gBACYA,IADZ;AAAA,UACkBC,GADlB,gBACkBA,GADlB;AAAA,UACuBC,GADvB,gBACuBA,GADvB;AAAA,UAC4BC,IAD5B,gBAC4BA,IAD5B;AAAA,UACkCC,MADlC,gBACkCA,MADlC;AAAA,UAC0CC,MAD1C,gBAC0CA,MAD1C;;AAII,UAAIL,IAAI,IAAI,EAAR,IAAcC,GAAG,IAAI,EAArB,IAA2BC,GAAG,IAAI,EAAlC,IAAwCC,IAAI,IAAI,EAAhD,IAAsDC,MAAM,IAAI,EAAhE,IAAsEC,MAAM,IAAI,EAApF,EACA;AACIT,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,OAHD,MAKK,IAAIU,KAAK,CAACJ,GAAD,CAAL,IAAcI,KAAK,CAACH,IAAD,CAAnB,IAA6BG,KAAK,CAACF,MAAD,CAAlC,IAA8CE,KAAK,CAACD,MAAD,CAAvD,EACL;AACIT,QAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,OAHI,MAKA,IAAIM,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,GAArB,EACL;AACIN,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,OAHI,MAKA,IAAIQ,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,EAAvB,IAA6BD,IAAI,GAAG,CAApC,IAAyCA,IAAI,GAAG,EAApD,EACL;AACIP,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAHI,MAKA,IAAIS,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,IAA3B,EACL;AACIT,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OAHI,MAML;AACI,cAAKW,QAAL;AACH;AACJ,KAzFkB;;AAGf,UAAKd,KAAL,GAAa;AACTO,MAAAA,IAAI,EAAE,EADG;AAETQ,MAAAA,KAAK,EAAE,EAFE;AAGTd,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,eAAe,EAAE,EAJR;AAKTM,MAAAA,GAAG,EAAE,EALI;AAMTC,MAAAA,GAAG,EAAE,EANI;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,MAAM,EAAE,EARC;AASTC,MAAAA,MAAM,EAAE,EATC;AAUTP,MAAAA,WAAW,EAAE;AAVJ,KAAb;AAYA,UAAKS,QAAL,GAAgB,MAAKA,QAAL,CAAcE,IAAd,+BAAhB;AAfe;AAgBlB;;;;WAGD,oBAAW;AAAA,yBAC0D,KAAKhB,KAD/D;AAAA,UACCO,IADD,gBACCA,IADD;AAAA,UACOQ,KADP,gBACOA,KADP;AAAA,UACcd,QADd,gBACcA,QADd;AAAA,UACwBO,GADxB,gBACwBA,GADxB;AAAA,UAC6BC,GAD7B,gBAC6BA,GAD7B;AAAA,UACkCC,IADlC,gBACkCA,IADlC;AAAA,UACwCC,MADxC,gBACwCA,MADxC;AAAA,UACgDC,MADhD,gBACgDA,MADhD;AAEPhB,MAAAA,IAAI,CAACqB,IAAL,GAAYC,8BAAZ,CAA2CH,KAA3C,EAAkDd,QAAlD,EACCkB,IADD,CACM,UAACC,MAAD,EAAY;AACdxB,QAAAA,IAAI,CAACyB,SAAL,GAAiBC,UAAjB,CAA4B,OAA5B,EACCC,GADD,CACK3B,IAAI,CAACqB,IAAL,GAAYO,WAAZ,CAAwBC,GAD7B,EAECC,GAFD,CAEK;AACDnB,UAAAA,IAAI,EAAJA,IADC;AAEDQ,UAAAA,KAAK,EAALA,KAFC;AAGDP,UAAAA,GAAG,EAAHA,GAHC;AAIDC,UAAAA,GAAG,EAAHA,GAJC;AAKDC,UAAAA,IAAI,EAAJA,IALC;AAMDC,UAAAA,MAAM,EAANA,MANC;AAODC,UAAAA,MAAM,EAANA;AAPC,SAFL;AAWAe,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACH,OAdD,EAeCS,KAfD,CAeO,UAACC,KAAD,EAAW;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAjBD;AAkBH;;;WAoDD,kBAAS;AAAA;;AAAA,UACAzB,WADA,GACe,KAAKL,KADpB,CACAK,WADA;;AAGL,UAAIA,WAAW,IAAI,CAAnB,EACA;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAI0B,MAAM,CAACC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,eAAe,EAAC,MAA3B;AAAkC,UAAA,QAAQ,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAEA,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAID,MAAM,CAACE,UAAvB;AAAmC,UAAA,MAAM,EAAIC,OAAO,yBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,EAGI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAIH,MAAM,CAACI,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIJ,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,OAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,YAAY,EAAE,sBAAArB,KAAK;AAAA,mBAAI,MAAI,CAACX,QAAL,CAAc;AAAEW,cAAAA,KAAK,EAALA;AAAF,aAAd,CAAJ;AAAA,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAOI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIgB,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,UAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,eAAe,EAAG,IAJtB;AAKI,UAAA,YAAY,EAAE,sBAAAnC,QAAQ;AAAA,mBAAI,MAAI,CAACG,QAAL,CAAc;AAAEH,cAAAA,QAAQ,EAARA;AAAF,aAAd,CAAJ;AAAA,WAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAcI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAI8B,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,kBAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,eAAe,EAAG,IAJtB;AAKI,UAAA,YAAY,EAAE,sBAAAlC,eAAe;AAAA,mBAAI,MAAI,CAACE,QAAL,CAAc;AAAEF,cAAAA,eAAe,EAAfA;AAAF,aAAd,CAAJ;AAAA,WALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,EAsBI,oBAAC,MAAD;AACI,UAAA,IAAI,EAAG,WADX;AAEI,UAAA,OAAO,EAAI;AAAA,mBAAM,MAAI,CAACH,gBAAL,EAAN;AAAA,WAFf;AAGI,UAAA,KAAK,EAAG,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBJ,CAHJ,CADJ;AAkCH,OApCD,MAqCK,IAAIM,WAAW,IAAI,CAAnB,EACL;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAI0B,MAAM,CAACC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAID,MAAM,CAACE,UAAvB;AAAmC,UAAA,MAAM,EAAIC,OAAO,yBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAEI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAIH,MAAM,CAACI,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIJ,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,MAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,YAAY,EAAE,sBAAA7B,IAAI;AAAA,mBAAI,MAAI,CAACH,QAAL,CAAc;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAAd,CAAJ;AAAA,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAOI,oBAAC,cAAD;AACI,UAAA,WAAW,EAAI;AAAC8B,YAAAA,KAAK,EAAC,oBAAP;AAA6BC,YAAAA,KAAK,EAAE;AAApC,WADnB;AAEI,UAAA,KAAK,EAAI,CAAC;AAACD,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,KAAK,EAAE;AAAvB,WAAD,EAAiC;AAACD,YAAAA,KAAK,EAAE,QAAR;AAAkBC,YAAAA,KAAK,EAAE;AAAzB,WAAjC,CAFb;AAGI,UAAA,aAAa,EAAE,uBAAA9B,GAAG;AAAA,mBAAI,MAAI,CAACJ,QAAL,CAAc;AAAEI,cAAAA,GAAG,EAAHA;AAAF,aAAd,CAAJ;AAAA,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAYI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIuB,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,KAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,YAAY,EAAE,sBAAA3B,GAAG;AAAA,mBAAI,MAAI,CAACL,QAAL,CAAc;AAAEK,cAAAA,GAAG,EAAHA;AAAF,aAAd,CAAJ;AAAA,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,EAkBI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIsB,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,gBAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,YAAY,EAAE,sBAAA1B,IAAI;AAAA,mBAAI,MAAI,CAACN,QAAL,CAAc;AAAEM,cAAAA,IAAI,EAAJA;AAAF,aAAd,CAAJ;AAAA,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBJ,EA8BI,oBAAC,cAAD;AACI,UAAA,WAAW,EAAI;AAAC2B,YAAAA,KAAK,EAAC,kBAAP;AAA2BC,YAAAA,KAAK,EAAE;AAAlC,WADnB;AAEI,UAAA,KAAK,EAAI,CAAC;AAACD,YAAAA,KAAK,EAAE,GAAR;AAAaC,YAAAA,KAAK,EAAE;AAApB,WAAD,EAA2B;AAACD,YAAAA,KAAK,EAAE,QAAR;AAAkBC,YAAAA,KAAK,EAAE;AAAzB,WAA3B,CAFb;AAGI,UAAA,aAAa,EAAE,uBAAA9B,GAAG;AAAA,mBAAI,MAAI,CAACJ,QAAL,CAAc;AAAEI,cAAAA,GAAG,EAAHA;AAAF,aAAd,CAAJ;AAAA,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA9BJ,EAmCI,oBAAC,SAAD;AACI,UAAA,KAAK,EAAIuB,MAAM,CAACK,UADpB;AAEI,UAAA,WAAW,EAAC,QAFhB;AAGI,UAAA,IAAI,EAAG,UAHX;AAII,UAAA,YAAY,EAAE,sBAAAxB,MAAM;AAAA,mBAAI,MAAI,CAACR,QAAL,CAAc;AAAEQ,cAAAA,MAAM,EAANA;AAAF,aAAd,CAAJ;AAAA,WAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnCJ,EA0CI,oBAAC,MAAD;AACI,UAAA,IAAI,EAAG,WADX;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACN,eAAL,EAAN;AAAA,WAFb;AAGI,UAAA,KAAK,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1CJ,CAFJ,CADJ;AAqDH;AACJ;;;;EA7LiCZ,S;;SAAjBG,Q;AAgMrB,IAAMkC,MAAM,GACZ;AACII,EAAAA,WAAW,EACX;AACII,IAAAA,SAAS,EAAE,EADf;AAEIC,IAAAA,UAAU,EAAE,EAFhB;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIC,IAAAA,YAAY,EAAE;AAJlB,GAFJ;AAQIT,EAAAA,UAAU,EACV;AACIU,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,MAAM,EAAE,GAFZ;AAGIJ,IAAAA,UAAU,EAAE,EAHhB;AAIID,IAAAA,SAAS,EAAE,EAJf;AAKIG,IAAAA,YAAY,EAAE;AALlB,GATJ;AAgBIN,EAAAA,UAAU,EACV;AACIO,IAAAA,KAAK,EAAE,GADX;AAEIC,IAAAA,MAAM,EAAE,EAFZ;AAGIC,IAAAA,WAAW,EAAE,SAHjB;AAIIC,IAAAA,eAAe,EAAE;AAJrB,GAjBJ;AAuBIC,EAAAA,SAAS,EACT;AACIC,IAAAA,QAAQ,EAAE,EADd;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAxBJ;AA4BIjB,EAAAA,aAAa,EACb;AACIY,IAAAA,MAAM,EAAE,MADZ;AAEIE,IAAAA,eAAe,EAAE,SAFrB;AAGII,IAAAA,UAAU,EAAE;AAHhB;AA7BJ,CADA","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react'\nimport { View, Button, TextInput, Image } from 'react-native'\nimport RNPickerSelect from 'react-native-picker-select';\n\nimport fire from '../fire'\n\nexport default class Register extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            sex: '',\n            age: '',\n            feet: '',\n            inches: '',\n            weight: '',\n            currentView: 1\n        }\n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    //TODO: process codes for errors and display to user\n    onSignUp() {\n        const { name, email, password, sex, age, feet, inches, weight} = this.state;\n        fire.auth().createUserWithEmailAndPassword(email, password)\n        .then((result) => {\n            fire.firestore().collection(\"users\")\n            .doc(fire.auth().currentUser.uid)\n            .set({\n                name,\n                email,\n                sex,\n                age,\n                feet,\n                inches,\n                weight\n            })\n            console.log(result)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    validatePassword = () => \n    {\n        const { password, confirmPassword } = this.state;\n\n        if (password != confirmPassword)\n        {\n            alert(\"Your passwords do not match!\");\n        }\n        else\n        {\n            this.setState({currentView: 2})\n        }\n    }\n\n    validateNumbers = () =>\n    {\n        const { name, sex, age, feet, inches, weight } = this.state;\n\n        //Check if any values are empty\n        if (name == '' || sex == '' || age == '' || feet == '' || inches == '' || weight == '')\n        {\n            alert(\"Fill out all fields.\");\n        }\n        //Check if number values are not numbers\n        else if (isNaN(age) || isNaN(feet) || isNaN(inches) || isNaN(weight))\n        {\n            alert(\"Some of your responses are invalid.\");\n        }\n        //Check if age is valid\n        else if (age < 1 || age > 120)\n        {\n            alert(\"Enter a valid age.\");\n        }\n        //Check if height is valid\n        else if (inches < 0 || inches > 11 || feet < 0 || feet > 10)\n        {\n            alert(\"Enter a valid height.\");\n        }\n        //Check if weight is valid\n        else if (weight < 0 || weight > 1500)\n        {\n            alert(\"Enter a valid weight.\");\n        }\n        //If everything is valid\n        else\n        {\n            this.onSignUp();\n        }\n    }\n\n    render() {\n        let {currentView} = this.state\n\n        if (currentView == 1)\n        {\n            return (\n                <View style = {styles.contentCenter}>\n                <StatusBar backgroundColor='blue' barStyle='light-content' />\n                <Image style = {styles.loginImage} source = {require(\"../../assets/icon.png\")}/>\n                    <View style = {styles.loginPrompt}>      \n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"email\"\n                            mode = \"outlined\"\n                            onChangeText={email => this.setState({ email })}\n                        />\n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"Password\"\n                            mode = \"outlined\"\n                            secureTextEntry={ true }\n                            onChangeText={password => this.setState({ password })}\n                        />\n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"Confirm password\"\n                            mode = \"outlined\"\n                            secureTextEntry={ true }\n                            onChangeText={confirmPassword => this.setState({ confirmPassword })}\n                        />\n                    \n                        <Button\n                            mode = \"contained\"\n                            onPress = {() => this.validatePassword()}\n                            title = \"Next\"\n                        />\n                    </View>\n                </View>\n            )\n        }\n        else if (currentView == 2)\n        {\n            return (\n                <View style = {styles.contentCenter}>\n                <Image style = {styles.loginImage} source = {require(\"../../assets/icon.png\")}/>\n                    <View style = {styles.loginPrompt}>      \n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"name\"\n                            mode = \"outlined\"\n                            onChangeText={name => this.setState({ name })}\n                        />\n                        <RNPickerSelect\n                            placeholder = {{label:'Select your sex...', value: ''}}\n                            items = {[{label: 'Male', value: 'male'}, {label: 'Female', value: 'female'}]}\n                            onValueChange={sex => this.setState({ sex })}\n                        />\n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"age\"\n                            mode = \"outlined\"\n                            onChangeText={age => this.setState({ age })}\n                        />\n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"height in feet\"\n                            mode = \"outlined\"\n                            onChangeText={feet => this.setState({ feet })}\n                        />\n                        {/* <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"height in inches\"\n                            mode = \"outlined\"\n                            onChangeText={inches => this.setState({ inches })}\n                        /> */}\n                        <RNPickerSelect\n                            placeholder = {{label:'Height in inches', value: '0'}}\n                            items = {[{label: '1', value: '1'}, {label: 'Female', value: 'female'}]}\n                            onValueChange={sex => this.setState({ sex })}\n                        />\n                        <TextInput\n                            style = {styles.inputLabel}\n                            placeholder=\"weight\"\n                            mode = \"outlined\"\n                            onChangeText={weight => this.setState({ weight })}\n                        />\n\n                        <Button\n                            mode = \"contained\"\n                            onPress={() => this.validateNumbers()}\n                            title=\"Register\"\n                        />\n                    </View>\n                </View>\n            )\n        }\n    }\n}\n\nconst styles = \n{\n    loginPrompt:\n    {\n        marginTop: 30,\n        marginLeft: 24,\n        marginRight: 24,\n        marginBottom: 70\n    },\n    loginImage:\n    {\n        width: 250,\n        height: 250,\n        marginLeft: 20,\n        marginTop: 30,\n        marginBottom: 30,\n    },\n    inputLabel:\n    {\n        width: 280,\n        height: 45,\n        borderColor: \"#43519D\",\n        backgroundColor: \"#FFFFFF\"\n    },\n    userLabel:\n    {\n        fontSize: 20,\n        color: \"#414E93\"\n    },\n    contentCenter:\n    {\n        height: '100%',\n        backgroundColor: \"#192879\",\n        alignItems: 'center'\n    }\n}"]},"metadata":{},"sourceType":"module"}