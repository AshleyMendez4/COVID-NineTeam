{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovan Zuniga\\\\Desktop\\\\COVID-NineTeam\\\\components\\\\main\\\\Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport fire from \"../fire\";\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var uploadImage = function uploadImage() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = \"image/\" + fire.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context.sent;\n            console.log(\"blob passed\");\n            task = fire.storage().ref().child(childPath).put(blob);\n            console.log(\"task passed\");\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted(snapshot) {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    style: {\n      flex: 1,\n      resizeMode: 'contain',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  cameraContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  fixedRatio: {\n    flex: 1,\n    aspectRatio: 2 / 3\n  }\n});","map":{"version":3,"sources":["C:/Users/Jovan Zuniga/Desktop/COVID-NineTeam/components/main/Save.js"],"names":["React","fire","require","Save","props","uploadImage","uri","route","params","image","childPath","auth","currentUser","uid","Math","random","toString","fetch","response","blob","console","log","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","taskError","on","flex","justifyContent","resizeMode","flexDirection","styles","StyleSheet","create","cameraContainer","fixedRatio","aspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,IAAP;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,2BAAD,CAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEhC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,KADf;AAEVC,YAAAA,SAFU,cAEWT,IAAI,CAACU,IAAL,GAAYC,WAAZ,CAAwBC,GAFnC,SAE0CC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,CAF1C;AAAA;AAAA,6CAGOC,KAAK,CAACX,GAAD,CAHZ;;AAAA;AAGVY,YAAAA,QAHU;AAAA;AAAA,6CAIGA,QAAQ,CAACC,IAAT,EAJH;;AAAA;AAIVA,YAAAA,IAJU;AAKhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACMC,YAAAA,IANU,GAMHrB,IAAI,CACZsB,OADQ,GAERC,GAFQ,GAGRC,KAHQ,CAGFf,SAHE,EAIRgB,GAJQ,CAIJP,IAJI,CANG;AAWhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACMM,YAAAA,YAZU,GAYK,SAAfA,YAAe,CAAAC,QAAQ,EAAI;AAC7BR,cAAAA,OAAO,CAACC,GAAR,mBAA4BO,QAAQ,CAACC,gBAArC;AACH,aAde;;AAgBVC,YAAAA,aAhBU,GAgBM,SAAhBA,aAAgB,CAAAF,QAAQ,EAAI;AAC9BN,cAAAA,IAAI,CAACM,QAAL,CAAcJ,GAAd,CAAkBO,cAAlB,GAAmCC,IAAnC,CAAwC,UAACJ,QAAD,EAAc;AAClDR,gBAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,eAFD;AAGH,aApBe;;AAsBVK,YAAAA,SAtBU,GAsBE,SAAZA,SAAY,CAAAL,QAAQ,EAAI;AAC1BR,cAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,aAxBe;;AA0BhBN,YAAAA,IAAI,CAACY,EAAL,CAAQ,eAAR,EAAyBP,YAAzB,EAAuCM,SAAvC,EAAkDH,aAAlD;;AA1BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AA4BA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAC9B,MAAAA,GAAG,EAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC;AAAzB,KAAf;AAAgD,IAAA,KAAK,EAAE;AAAE0B,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,UAAU,EAAE,SAAvB;AAAkCC,MAAAA,aAAa,EAAE;AAAjD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAEjC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;AACD,IAAMkC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,eAAe,EAAE;AACfP,IAAAA,IAAI,EAAE,CADS;AAEfG,IAAAA,aAAa,EAAE;AAFA,GADY;AAK7BK,EAAAA,UAAU,EAAE;AACVR,IAAAA,IAAI,EAAE,CADI;AAEVS,IAAAA,WAAW,EAAE,IAAI;AAFP;AALiB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { View, Image, StyleSheet, Button } from 'react-native'\r\n\r\nimport fire from '../fire'\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\n\r\nexport default function Save(props) {\r\n\r\n    const uploadImage = async () => {\r\n        const uri = props.route.params.image;\r\n        const childPath = `image/${fire.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n        console.log(\"blob passed\")\r\n        const task = fire\r\n            .storage()\r\n            .ref()\r\n            .child(childPath)\r\n            .put(blob)\r\n        console.log(\"task passed\");\r\n        const taskProgress = snapshot => {\r\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n        }\r\n\r\n        const taskCompleted = snapshot => {\r\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n                console.log(snapshot);\r\n            })\r\n        }\r\n\r\n        const taskError = snapshot => {\r\n            console.log(snapshot);\r\n        }\r\n\r\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n    }\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'space-evenly'}}>\r\n            <Image source={{uri: props.route.params.image}} style={{ flex: 1, resizeMode: 'contain', flexDirection: 'row'}}/>\r\n            <Button title=\"Save\" onPress={uploadImage}/>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    cameraContainer: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    fixedRatio: {\r\n      flex: 1,\r\n      aspectRatio: 2 / 3\r\n    }\r\n  })\r\n"]},"metadata":{},"sourceType":"module"}