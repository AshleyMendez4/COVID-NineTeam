{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jovan Zuniga\\\\Desktop\\\\COVID-NineTeam\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport fire from \"./components/fire\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    LogBox.ignoreLogs(['Setting a timer']);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fire.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            headerBackTitle: \"Back\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AddContainer\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerBackTitle: \"Back\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerBackTitle: \"Back\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Jovan Zuniga/Desktop/COVID-NineTeam/App.js"],"names":["StatusBar","React","Component","LogBox","NavigationContainer","createStackNavigator","fire","Provider","createStore","applyMiddleware","rootReducer","thunk","store","LandingScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","SaveScreen","Stack","App","props","state","loaded","ignoreLogs","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","headerBackTitle","navigation"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;SACiCC,M;AAEjC,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,IAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,IAAMC,KAAK,GAAGJ,WAAW,CAACE,WAAD,EAAcD,eAAe,CAACE,KAAD,CAA7B,CAAzB;AAEA,OAAOE,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AAGA,IAAMC,KAAK,GAAGd,oBAAoB,EAAlC;;IACqBe,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGApB,IAAAA,MAAM,CAACqB,UAAP,CAAkB,CAAC,iBAAD,CAAlB;AANiB;AAOlB;;;;WAGD,6BAAoB;AAAA;;AAClBlB,MAAAA,IAAI,CAACmB,IAAL,GAAYC,kBAAZ,CAA+B,UAACC,IAAD,EAAU;AACvC,YAAG,CAACA,IAAJ,EAAU;AACR,UAAA,MAAI,CAACC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,KADE;AAEZN,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID,SALD,MAKO;AACL,UAAA,MAAI,CAACK,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZN,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID;AACF,OAZD;AAaD;;;WAED,kBAAS;AAAA,wBACsB,KAAKD,KAD3B;AAAA,UACCO,QADD,eACCA,QADD;AAAA,UACWN,MADX,eACWA,MADX;;AAIP,UAAG,CAACA,MAAJ,EAAY;AACV,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEO,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,cAAc,EAAE;AAA3B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;AAGD,UAAG,CAACF,QAAJ,EAAc;AACd,eACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAEhB,aAAxC;AAAuD,UAAA,OAAO,EAAE;AAAEmB,YAAAA,WAAW,EAAE;AAAf,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAElB,cAAzC;AAAyD,UAAA,OAAO,EAAE;AAAEmB,YAAAA,eAAe,EAAE;AAAnB,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAElB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADA,CADF;AASC;;AAED,aAEE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEI,UAArC;AAAiD,QAAA,OAAO,EAAE;AAAEgB,UAAAA,WAAW,EAAE;AAAf,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAkC,QAAA,SAAS,EAAEf,SAA7C;AAAwD,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWa,UAA/E;AAA2F,QAAA,OAAO,EAAE;AAAED,UAAAA,eAAe,EAAE;AAAnB,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEf,UAArC;AAAiD,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWa,UAAxE;AAAmF,QAAA,OAAO,EAAE;AAAED,UAAAA,eAAe,EAAE;AAAnB,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CADF,CAFF;AAaD;;;;EAjE8B/B,S;;SAAZkB,G","sourcesContent":["import 'react-native-gesture-handler'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, LogBox } from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport fire from './components/fire';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk';\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nimport LandingScreen from './components/auth/Landing'\r\nimport RegisterScreen from './components/auth/Register';\r\nimport LoginScreen from './components/auth/Login'\r\nimport MainScreen from './components/Main';\r\nimport AddScreen from './components/main/Add';\r\nimport SaveScreen from './components/main/Save'\r\n\r\n// Stack to handle navigation\r\nconst Stack = createStackNavigator();\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loaded: false\r\n    }\r\n    LogBox.ignoreLogs(['Setting a timer']);\r\n  }\r\n\r\n  // check whether user is logged in\r\n  componentDidMount() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if(!user) {\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n\r\n    // if not loaded display loading screen\r\n    if(!loaded) {\r\n      return(\r\n        <View style={{ flex: 1, justifyContent: 'center'}}>\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    // if not logged in display navigation container\r\n    if(!loggedIn) {\r\n    return (\r\n      <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Landing\">\r\n        <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false}}/>\r\n        <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerBackTitle: \"Back\" }}/>\r\n        <Stack.Screen name=\"Login\" component={LoginScreen}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n    )\r\n    }\r\n\r\n    return(\r\n      // must be inside provider to allow redux to work\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"Main\">\r\n            <Stack.Screen name=\"Main\" component={MainScreen} options={{ headerShown: false}}/>\r\n            <Stack.Screen name=\"AddContainer\" component={AddScreen} navigation={this.props.navigation} options={{ headerBackTitle: \"Back\" }}/>\r\n            <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation}options={{ headerBackTitle: \"Back\" }}/>\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </Provider>\r\n    \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}