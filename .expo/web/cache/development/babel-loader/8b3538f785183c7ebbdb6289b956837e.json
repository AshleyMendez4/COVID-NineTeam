{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jovan\\\\Documents\\\\COVID-NineTeam\\\\components\\\\main\\\\Feed.js\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport fire from \"../fire\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport colors from \"../../assets/colors/colors\";\nexport default function Feed() {\n  var _this = this;\n\n  var today = new Date();\n  var logDate = today.toDateString(today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate());\n  var usersDB = fire.firestore().collection('users');\n  var userID = fire.auth().currentUser.uid;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sex = _useState2[0],\n      setSex = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weight = _useState6[0],\n      setWeight = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      feet = _useState8[0],\n      setFeet = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inches = _useState10[0],\n      setInches = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      purpose = _useState12[0],\n      setPurpose = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dailyFood = _useState14[0],\n      setDailyFood = _useState14[1];\n\n  var totalHeight = feet * 12 + Number(inches);\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      recommendedCalories = _useState16[0],\n      setRecommendedCalories = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      purposeCalories = _useState18[0],\n      setPurposeCalories = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dailyCalories = _useState20[0],\n      setDailyCalories = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userDataIsRetrieved = _useState22[0],\n      setUserDataIsRetrieved = _useState22[1];\n\n  var newDailyFood = undefined;\n  var newFoodName = \"\";\n  var newFoodCalories = \"\";\n\n  function updateFeed() {\n    usersDB.doc(userID).collection(\"DailyFood\").add(newDailyFood).then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      Alert.alert('Error', error.message, [{\n        text: 'OK'\n      }], {\n        cancelable: true\n      });\n    });\n    setUserDataIsRetrieved(false);\n  }\n\n  var getUserInfo = function getUserInfo() {\n    usersDB.doc(userID).get().then(function (snapshot) {\n      setSex(snapshot.data().sex);\n      setWeight(snapshot.data().weight);\n      setFeet(snapshot.data().feet);\n      setInches(snapshot.data().inches);\n      setAge(snapshot.data().age);\n      setPurpose(snapshot.data().purpose);\n      calculateCalories();\n    });\n    usersDB.doc(userID).collection(\"DailyFood\").get().then(function (querySnapshot) {\n      var dailyFoodData = querySnapshot.docs.map(function (doc) {\n        return doc.data();\n      });\n      setDailyFood(dailyFoodData);\n      setUserDataIsRetrieved(true);\n      changeDailyCalories();\n    }).catch(function (error) {\n      console.log('Error getting documents: ', error);\n    });\n  };\n\n  function validateFoodInputs(name, calories) {\n    var errorMsg = 'Invalid fields:';\n    var isError = false;\n\n    if (name == \"\") {\n      errorMsg += '\\nName';\n      isError = true;\n    }\n\n    if (calories == \"\" || calories < 0) {\n      errorMsg += '\\nCalories';\n      isError = true;\n    }\n\n    if (isError == true) {\n      alert(errorMsg);\n      isError = false;\n    } else {\n      typeNewFood(name, calories);\n    }\n  }\n\n  function typeNewFood(name, calories) {\n    newDailyFood = {\n      name: name,\n      calories: calories\n    };\n    updateFeed();\n    alert(\"You added: \" + name);\n    changeDailyCalories();\n  }\n\n  function changeDailyCalories() {\n    var currentCals = 0;\n\n    if (dailyFood.length != 0) {\n      for (var i = 0; i < dailyFood.length; i++) {\n        currentCals += parseFloat(dailyFood[i].calories);\n      }\n    }\n\n    setDailyCalories(currentCals);\n  }\n\n  function calculateCalories() {\n    var calories = \"\";\n\n    if (sex == \"male\") {\n      calories = 66 + 6.3 * weight + Number(12.9 * totalHeight) - 6.8 * age;\n      setRecommendedCalories(calories);\n    } else {\n      calories = 65 + 4.3 * weight + Number(4.7 * totalHeight) - 4.7 * age;\n      setRecommendedCalories(calories);\n    }\n\n    calculatePurposeCalories(calories);\n  }\n\n  function calculatePurposeCalories(calories) {\n    if (purpose == \"donate\") {\n      setPurposeCalories(calories - 500);\n    } else {\n      setPurposeCalories(calories + 500);\n    }\n  }\n\n  if (userDataIsRetrieved == false) {\n    getUserInfo();\n  }\n\n  return React.createElement(LinearGradient, {\n    colors: [colors.lightBlue, colors.darkBlue],\n    style: styles.outerScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.contentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.pageHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Feed\"), React.createElement(View, {\n    style: styles.feedScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Your purpose is to \", purpose, \" weight\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"Date: \", logDate.toString())), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, \"Daily Calories to maintain weight: \", Math.round(recommendedCalories), \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Daily Calories to \", purpose, \" 1 lb: \", Math.round(purposeCalories), \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.feedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Current Daily Calories: \", dailyCalories, \" Cal\")), React.createElement(View, {\n    style: styles.feedRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.nameInput,\n    placeholder: \"Name of food\",\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(editedFoodName) {\n      return newFoodName = editedFoodName;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.calorieInput,\n    placeholder: \"Cals\",\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(editedFoodCalories) {\n      return newFoodCalories = editedFoodCalories;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    title: \"Add Food\",\n    onPress: function onPress() {\n      return validateFoodInputs(newFoodName, newFoodCalories);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  })), React.createElement(FlatList, {\n    data: dailyFood,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.profileData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return togglePopup(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 37\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.purposeText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 37\n        }\n      }, item.purpose, \" weight!\", '\\n'))));\n    },\n    onEndReached: function onEndReached() {\n      return continueList(startIndex, endIndex);\n    },\n    onEndReachedThreshold: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }))));\n}\nvar styles = {\n  contentCenter: {\n    height: '100%',\n    alignItems: 'center'\n  },\n  feedScreen: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: \"#FFFFFF\"\n  },\n  feedData: {\n    fontSize: 20\n  },\n  feedRow: {\n    flexDirection: 'row'\n  },\n  calorieInput: {\n    fontSize: 20,\n    width: 50\n  },\n  nameInput: {\n    fontSize: 20,\n    width: 200\n  },\n  outerScreen: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: '100%'\n  },\n  pageHeader: {\n    fontSize: 30,\n    fontFamily: 'NunitoSans-Bold',\n    color: '#000000'\n  }\n};","map":{"version":3,"sources":["C:/Users/Jovan/Documents/COVID-NineTeam/components/main/Feed.js"],"names":["React","useState","StatusBar","fire","SafeAreaView","LinearGradient","colors","Feed","today","Date","logDate","toDateString","getFullYear","getMonth","getDate","usersDB","firestore","collection","userID","auth","currentUser","uid","sex","setSex","age","setAge","weight","setWeight","feet","setFeet","inches","setInches","purpose","setPurpose","dailyFood","setDailyFood","totalHeight","Number","recommendedCalories","setRecommendedCalories","purposeCalories","setPurposeCalories","dailyCalories","setDailyCalories","userDataIsRetrieved","setUserDataIsRetrieved","newDailyFood","undefined","newFoodName","newFoodCalories","updateFeed","doc","add","then","result","console","log","catch","error","Alert","alert","message","text","cancelable","getUserInfo","get","snapshot","data","calculateCalories","querySnapshot","dailyFoodData","docs","map","changeDailyCalories","validateFoodInputs","name","calories","errorMsg","isError","typeNewFood","currentCals","length","i","parseFloat","calculatePurposeCalories","lightBlue","darkBlue","styles","outerScreen","contentCenter","pageHeader","feedScreen","feedRow","feedData","toString","Math","round","nameInput","editedFoodName","calorieInput","editedFoodCalories","item","profileData","togglePopup","alignItems","purposeText","continueList","startIndex","endIndex","height","width","backgroundColor","fontSize","flexDirection","position","left","right","top","fontFamily","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\n\r\nimport fire from '../fire'\r\nimport { Text, View, Button, TextInput, Image, FlatList, TouchableOpacity } from 'react-native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\nimport colors from '../../assets/colors/colors'\r\n\r\nexport default function Feed() \r\n{\r\n    //calorie log  \r\n    ///** lookup how to take collections in firebase   make new collection under current user then start current collect. \r\n    // can a sub collection run under each user where they can enter their calories and it log (name,date,calories)\r\n    let today = new Date();\r\n    let logDate = today.toDateString(today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate());\r\n\r\n    const usersDB = fire.firestore().collection('users')\r\n    const userID = fire.auth().currentUser.uid\r\n\r\n    const [sex, setSex] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [feet, setFeet] = useState(\"\");\r\n    const [inches, setInches] = useState(\"\");\r\n    const [purpose, setPurpose] = useState(\"\");\r\n    const [dailyFood, setDailyFood] = useState(null);\r\n    let totalHeight = ((feet * 12) + Number(inches));\r\n\r\n    const [recommendedCalories, setRecommendedCalories] = useState(\"\");\r\n    const [purposeCalories, setPurposeCalories] = useState(\"\");\r\n    const [dailyCalories, setDailyCalories] = useState(0);\r\n\r\n    const [userDataIsRetrieved, setUserDataIsRetrieved] = useState(false);\r\n    let newDailyFood = undefined;\r\n    let newFoodName = \"\";\r\n    let newFoodCalories = \"\";\r\n    \r\n    \r\n    function updateFeed()\r\n    {\r\n        usersDB.doc(userID).collection(\"DailyFood\").add(newDailyFood)\r\n        .then((result) => {\r\n            console.log(result)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            Alert.alert('Error', error.message, [{text: 'OK'},], {cancelable: true});\r\n        });\r\n     \r\n        setUserDataIsRetrieved(false);\r\n    }\r\n      \r\n    const getUserInfo = () =>\r\n    {\r\n        usersDB.doc(userID).get().then((snapshot => \r\n            {\r\n                setSex(snapshot.data().sex);\r\n                setWeight(snapshot.data().weight);\r\n                setFeet(snapshot.data().feet);\r\n                setInches(snapshot.data().inches);\r\n                setAge(snapshot.data().age);\r\n                setPurpose(snapshot.data().purpose);\r\n\r\n                calculateCalories();\r\n            }))\r\n        \r\n        usersDB.doc(userID).collection(\"DailyFood\").get().then(function(querySnapshot)\r\n            {\r\n                let dailyFoodData = querySnapshot.docs.map(doc => doc.data())\r\n                setDailyFood(dailyFoodData);\r\n\r\n                setUserDataIsRetrieved(true);\r\n\r\n                changeDailyCalories();\r\n\r\n            }).catch(function(error) {console.log('Error getting documents: ', error)})\r\n    }\r\n\r\n    function validateFoodInputs(name, calories)\r\n    {\r\n        let errorMsg = 'Invalid fields:';\r\n        let isError = false;\r\n\r\n        if (name == \"\")\r\n        {\r\n            errorMsg += '\\nName';\r\n            isError = true;\r\n        }\r\n\r\n        if (calories == \"\" || calories < 0)\r\n        {\r\n            errorMsg += '\\nCalories';\r\n            isError = true;\r\n        }\r\n\r\n        //If an error was detected.\r\n        if (isError == true)\r\n        {\r\n            alert(errorMsg);\r\n            isError = false;\r\n        }\r\n        //If everything is valid\r\n        else\r\n        {\r\n            typeNewFood(name, calories);\r\n        }\r\n    }\r\n\r\n    function typeNewFood(name, calories)\r\n    {\r\n        newDailyFood = {name: name, calories: calories};\r\n        // let id = Object.keys(newDailyFood).length + 1;\r\n        // newDailyFood[id] = {name: name, calories: calories};\r\n        updateFeed();\r\n        alert(\"You added: \" + name);\r\n\r\n        changeDailyCalories();\r\n    }\r\n\r\n    function changeDailyCalories()\r\n    {\r\n        let currentCals = 0;\r\n\r\n        if (dailyFood.length != 0)\r\n        {\r\n            for (let i = 0; i < dailyFood.length; i++)\r\n            {\r\n                currentCals += parseFloat(dailyFood[i].calories);\r\n            }\r\n        }\r\n\r\n        setDailyCalories(currentCals);\r\n    }\r\n\r\n    //Recommended calories to maintain weight   \r\n    //BMR \r\n    //Harris-Benedict Formula\r\n    function calculateCalories()\r\n    {\r\n        let calories = \"\";\r\n\r\n        if (sex == \"male\") \r\n        {\r\n            calories = (66 + (6.3 * weight) + Number(12.9 * totalHeight) - (6.8 * age));\r\n            setRecommendedCalories(calories);\r\n        } \r\n        else \r\n        {\r\n            calories = (65 + (4.3 * weight) + Number(4.7 * totalHeight) - (4.7 * age))\r\n            setRecommendedCalories(calories);\r\n        }\r\n\r\n        calculatePurposeCalories(calories);\r\n    }\r\n\r\n    //calculates calories needed to gain or lose weight depending on user's purpose\r\n    function calculatePurposeCalories(calories)\r\n    {\r\n        if (purpose == \"donate\")\r\n        {\r\n            setPurposeCalories(calories - 500);\r\n        }\r\n        else\r\n        {\r\n            setPurposeCalories(calories + 500);\r\n        }   \r\n    }\r\n\r\n    if (userDataIsRetrieved == false)\r\n    {\r\n        getUserInfo();\r\n    }\r\n\r\n    return (\r\n        <LinearGradient colors={[colors.lightBlue, colors.darkBlue]} style={styles.outerScreen}>\r\n        <SafeAreaView style = {styles.contentCenter}>\r\n            <StatusBar barStyle='light-content' />\r\n            <Text style={styles.pageHeader}>Feed</Text>\r\n            <View style = {styles.feedScreen}>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <Text style = {styles.feedData}>Your purpose is to {purpose} weight</Text>\r\n                </View>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <Text style = {styles.feedData}>Date: {logDate.toString()}</Text>\r\n                </View>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <Text style = {styles.feedData}>Daily Calories to maintain weight: {Math.round(recommendedCalories)} Cal</Text>\r\n                </View>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <Text style = {styles.feedData}>Daily Calories to {purpose} 1 lb: {Math.round(purposeCalories)} Cal</Text>\r\n                </View>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <Text style = {styles.feedData}>Current Daily Calories: {dailyCalories} Cal</Text>\r\n                </View>\r\n\r\n                <View style = {styles.feedRow}>\r\n                    <TextInput \r\n                        style = {styles.nameInput}\r\n                        placeholder = \"Name of food\"\r\n                        returnKeyType = 'done'\r\n                        onChangeText = {editedFoodName => newFoodName = editedFoodName}\r\n                    />\r\n                    <TextInput \r\n                        style = {styles.calorieInput}\r\n                        placeholder = \"Cals\"\r\n                        returnKeyType = 'done'\r\n                        onChangeText = {editedFoodCalories => newFoodCalories = editedFoodCalories}\r\n                    />\r\n                    <Button\r\n                        title = 'Add Food'\r\n                        onPress = {() => validateFoodInputs(newFoodName, newFoodCalories)}\r\n                    />\r\n                </View>\r\n                <FlatList\r\n                    data={dailyFood}\r\n                    renderItem={({item}) => \r\n                        <View style = {styles.profileData}>\r\n                            <TouchableOpacity onPress = {() => togglePopup(item)}>\r\n                                <View style={{ alignItems: 'center'}}>\r\n                                    <Text style= {styles.name}>{item.name}</Text>\r\n                                    <Text style = {styles.purposeText}>{item.purpose} weight!{'\\n'}</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>}\r\n                    onEndReached = {() => continueList(startIndex, endIndex)}\r\n                    onEndReachedThreshold = {1}\r\n                    />\r\n\r\n            </View>\r\n        </SafeAreaView>\r\n        </LinearGradient>\r\n    );\r\n}   \r\n\r\nconst styles =\r\n{\r\n    contentCenter:\r\n    {\r\n        height: '100%',\r\n        alignItems: 'center'\r\n    },\r\n    feedScreen:\r\n    {\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundColor: \"#FFFFFF\"\r\n    },\r\n    feedData:\r\n    {\r\n        fontSize: 20,\r\n    },\r\n    feedRow:\r\n    {\r\n        flexDirection: 'row',\r\n    },\r\n    calorieInput:\r\n    {\r\n        fontSize: 20,\r\n        width: 50\r\n    },\r\n    nameInput:\r\n    {\r\n        fontSize: 20,\r\n        width: 200\r\n    },\r\n    outerScreen: \r\n    {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        height: '100%'\r\n    },\r\n    pageHeader:\r\n    {\r\n        fontSize: 30,\r\n        fontFamily: 'NunitoSans-Bold',\r\n        color: '#000000'\r\n    },\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}